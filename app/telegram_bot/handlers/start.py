from aiogram import Dispatcher, Bot
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from app.database import get_db
from app.dao.models_dao import TelegramSubscriberDAO
import logging

logger = logging.getLogger(__name__)

commands_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="/projects"), KeyboardButton(text="/help")],
        [KeyboardButton(text="/postupdate")],
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

async def cmd_start(message: Message):
    telegram_user_id = str(message.from_user.id)
    username = message.from_user.username or "unknown"
    logger.info(f"User {telegram_user_id} ({username}) started bot")

    try:
        async for db in get_db():
            try:
                subscriber = await TelegramSubscriberDAO.get_by_telegram_user_id(db, telegram_user_id)
                if not subscriber:
                    await TelegramSubscriberDAO.create(db, {"telegram_user_id": telegram_user_id})
                    await message.answer(
                        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –±—Ä–∞—Ç–∏—à–∫–∞! üöÄ –¢—ã –≤ –∏–≥—Ä–µ!\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: üíª",
                        reply_markup=commands_keyboard, parse_mode="MarkdownV2"
                    )
                else:
                    await message.answer(
                        "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –∫–æ–¥–µ—Ä! üî• –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å: üíª",
                        reply_markup=commands_keyboard, parse_mode="MarkdownV2"
                    )
                logger.info(f"User {telegram_user_id} processed successfully")
                break  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–Ω—É —Å–µ—Å—Å–∏—é
            except Exception as e:
                logger.error(f"Error registering user {telegram_user_id}: {str(e)}")
                await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ! üòï", parse_mode="MarkdownV2")
                break
    except Exception as e:
        logger.error(f"Error accessing database for user {telegram_user_id}: {str(e)}")
        await message.answer("–ë–∞–≥–∏? –≠—Ç–æ —Ñ–∏—á–∏! üòé –ù–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∑–∞–ª–µ—Ç–∞–π –ø–æ–∑–∂–µ! üöÄ", parse_mode="MarkdownV2")

def register_start_handlers(dp: Dispatcher, bot: Bot):
    dp.message.register(cmd_start, Command("start"))